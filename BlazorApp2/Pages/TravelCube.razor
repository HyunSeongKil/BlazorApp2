@page  "/travel-cube"
@using Models
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager
@inject HttpClient httpClient
@inject Blazored.LocalStorage.ILocalStorageService lsService


<h3>travel Cube</h3>

@if (null != currentCube)
{
    <div class="card">
        <div class="card-header">
            <div class="row">
                <div class="col-6">
                    @currentCube.Sj
                </div>
                <div class="col-6 text-right">
                    <button type="button" class="btn btn-light" @onclick="AddChild">댓글등록</button>
                    <button type="button" class="btn btn-light" @onclick="Modify">수정</button>
                    <button type="button" class="btn btn-light" @onclick="Delete">삭제</button>
                    <button type="button" class="btn btn-light" @onclick="Siren">신고</button>
                </div>
            </div>
        </div>
        <div class="card-body">
            @*<h5 class="card-title">@currentCube.Sj</h5>*@
            <p class="card-text" @onclick="Detail">
                @if (!string.IsNullOrEmpty(currentCube.Cn))
                {
                    @((MarkupString)currentCube.Cn.Replace("\n", "<br/>"))
                }
            </p>
            <h6 class="card-subtitle mb-2 text-muted">
                카테고리: <a href="javascript:;" @onclick="PopupAndFilteringByCtgryCode"> @currentCube.CtgryCodeNm</a>
            </h6>
            @if (null != currentCube.Tags && 0 < currentCube.Tags.Count)
            {
                <h6 class="card-subtitle mb-2 text-muted">
                    태그:
                    @foreach (Tag x in currentCube.Tags)
                    {
                        <a href="javascript:;" @onclick="PopupAndFilteringByTagNm">#@x.Nm&nbsp;</a>
                    }
                </h6>

            }
            <div class="d-inline">
                <a href="javascript:;" class="" @onclick="UpdateLikeCo">좋아요:</a>
                <a href="javascript:;" class="" @onclick="PopupLikeUserList">@currentCube.LikeCo</a>
            </div>
            <div class="d-inline ml-1">
                <a href="javascript:;" class="card-link" @onclick="UpdateUnlikeCo">싫어요:</a>
                <a href="javascript:;" class="" @onclick="PopupUnlikeUserList">@currentCube.UnlikeCo</a>
            </div>
            <div class="d-inline ml-1">
                <a href="javascript:;" class="card-link" @onclick="PopupChildRegistForm">댓글:</a>
                <a href="javascript:;" class="" @onclick="PopupChildrenList">@currentCube.Rdcnt</a>
            </div>
            <div class="d-inline ml-1">
                <a href="javascript:;" class="card-link" @onclick="PopupCommentRegistForm">콤멘트:</a>
                <a href="javascript:;" class="" @onclick="PopupCommentList">@currentCube.CommentCo</a>
            </div>
            
            <div class="card-footer text-muted">
                <a href="javascript:;" class="card-link" @onclick="PopupAndFilteringByRegisterId">작성자: @currentCube.RegisterNm</a>
                작성일: @currentCube.RegistDt
            </div>
        </div>
    </div>

}

<div class="text-center mt-1">
    <button type="button" class="btn btn-light" @onclick="(args)=>GotoPrevSibling(args)">←</button>
    <button type="button" class="btn btn-light" @onclick="(args)=>GotoParent(args)">↑</button>
    <button type="button" class="btn btn-light" title="랜덤" @onclick="(args)=>GotoRandom(args)">▣</button>
    <button type="button" class="btn btn-light" @onclick="(args)=>GotoChild(args)">↓</button>
    <button type="button" class="btn btn-light" @onclick="(args)=>GotoNextSibling(args)">→</button>
</div>

<style type="text/css">
    #mynetwork {
        width: 100%;
        height: 400px;
        border: 1px solid lightgray;
    }
</style>
<div id="mynetwork"></div>

@if (isLoading)
{
    <div class="spinner-border" role="status">
        <span class="sr-only">Loading...</span>
    </div>
}


<!--신고 모달-->
<SirenModal @ref="sirenModal" travelCube="@this"></SirenModal>

<!--좋아요 누른 사용자 목록-->
<ReactUsersModal @ref="reactUsersModal" travelCube="@this" CubeId="@reactUsersParamCubeId" UserId="@reactUsersParamUserId" Gbn="@reactUsersParamGbn"></ReactUsersModal>


@code{


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }


        //TODO DB에 저장된(최근에 조회한) CubeId 조회
        string cubeId = GetLastestCubeId();

        //저장된값 없으면 random 실행
        if (string.IsNullOrEmpty(cubeId))
        {
            GotoRandom(null);
        }
        else
        {
            SetCurrentCube(await GetCubeByCubeId(cubeId));
        }

    }


}
